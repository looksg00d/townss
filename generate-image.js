const { runBrowser, closeBrowser } = require('./run-browser');
const logger = require('./services/logger').withLabel('GenerateImage');
const { uploadToDrive } = require('./google-drive');
const path = require('path');
const fs = require('fs').promises;

const { exec } = require('child_process');
const util = require('util');
const execAsync = util.promisify(exec);
const { loadProfiles } = require('./profiles');
const { sendBaseTransaction } = require('./base-transfer.js');

// –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const BASE_DOWNLOAD_PATH = path.join(process.cwd(), 'generated_images');

/**
 * –ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ —Å –ø–æ–º–æ—â—å—é PowerShell
 * @returns {Promise<string>} –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
 */
async function readClipboard() {
  try {
    const { stdout } = await execAsync('powershell -command "Get-Clipboard"');
    return stdout.trim();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞:', error.message);
    return '';
  }
}

async function waitForPageReady(page) {
  console.log('–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
  
  try {
    await Promise.race([
      Promise.all([
        page.waitForLoadState('domcontentloaded'),
        page.waitForLoadState('networkidle'),
        page.waitForFunction(() => {
          const loaders = document.querySelectorAll('[class*="loader"], [class*="loading"], [class*="spinner"]');
          return loaders.length === 0;
        }, { timeout: 10000 })
      ]),
      new Promise((_, reject) => setTimeout(() => reject(new Error('Timeout')), 30000))
    ]);
  } catch (e) {
    console.log('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', e.message);
  }
  
  await page.waitForTimeout(1000);
  console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π');
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ –≤ —Ñ–∞–π–ª
 * @param {string} outputPath - –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @returns {Promise<boolean>} –£—Å–ø–µ—à–Ω–æ –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
 */
async function saveClipboardImage(outputPath) {
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    await fs.mkdir(path.dirname(outputPath), { recursive: true });

    // PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
    const psScript = `
      Add-Type -AssemblyName System.Windows.Forms
      $image = [System.Windows.Forms.Clipboard]::GetImage()
      if ($image) {
        $image.Save('${outputPath.replace(/\\/g, '\\\\')}')
        Write-Output "true"
      } else {
        Write-Output "false"
      }
    `;

    const { stdout } = await execAsync(`powershell -command "${psScript}"`);
    return stdout.trim() === 'true';
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
    return false;
  }
}

async function waitForGeneratedImage(page) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏ –¥—Ä—É–≥–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    const loadingSelector = 'img[class*="loading-"]';
    const imageSelector = 'img[class*="image-"]';
    
    try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥—Ä—É–∑—á–∏–∫ –∏—Å—á–µ–∑
        logger.info('–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏...');
        await page.waitForSelector(loadingSelector, { state: 'hidden', timeout: 30000 });
        
        // –ó–∞—Ç–µ–º –∂–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        logger.info('–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
        await page.waitForSelector(imageSelector, {
            state: 'visible',
            timeout: 30000
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        const isImageLoaded = await page.evaluate((selector) => {
            const img = document.querySelector(selector);
            if (!img) return false;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            return img.complete && img.naturalWidth > 0 && img.naturalHeight > 0;
        }, imageSelector);

        if (!isImageLoaded) {
            logger.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–æ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
            // –ñ–¥–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –ø–æ–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
            await page.waitForFunction((selector) => {
                const img = document.querySelector(selector);
                return img && img.complete && img.naturalWidth > 0 && img.naturalHeight > 0;
            }, imageSelector, { timeout: 30000 });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
        await page.waitForTimeout(2000);
        
        logger.info('‚úÖ Generated image is fully loaded');
        return true;
    } catch (error) {
        logger.info('‚ùå Generated image not found or not fully loaded:', error.message);
        return false;
    }
}

async function generateImage(profileId, prompt, browser, username) {
    logger.info(`\nüöÄ generate-image.js –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è: ${profileId}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  
    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
        if (!browser) {
            throw new Error('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –±—Ä–∞—É–∑–µ—Ä–µ
        const page = await browser.newPage();

        const maxNavigationRetries = 3;
        let navigationAttempts = 0;
        let pageLoaded = false;

        while (navigationAttempts < maxNavigationRetries && !pageLoaded) {
            navigationAttempts++;
            logger.info(`–ü–æ–ø—ã—Ç–∫–∞ #${navigationAttempts} –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...`);
            try {
                await page.goto('https://dreamina.capcut.com/ai-tool/image/generate', {
                    waitUntil: 'domcontentloaded',
                    timeout: 30000 // –¢–∞–π–º–∞—É—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                });
                // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                await waitForPageReady(page);
                pageLoaded = true; // –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                logger.info('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
            } catch (error) {
                logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–ø–æ–ø—ã—Ç–∫–∞ ${navigationAttempts}/${maxNavigationRetries}): ${error.message}`);
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π —Ç—É–Ω–Ω–µ–ª—å–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
                if (error.message.includes('net::ERR_TUNNEL_CONNECTION_FAILED') && navigationAttempts < maxNavigationRetries) {
                    logger.info(`–û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...`);
                    await page.waitForTimeout(5000); // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                } else {
                    // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –ø–æ–ø—ã—Ç–∫–∏, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                    throw error;
                }
            }
        }

        if (!pageLoaded) {
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ ${maxNavigationRetries} –ø–æ–ø—ã—Ç–æ–∫`);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        await page.waitForTimeout(5000);

        // –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–æ–ª—é –≤–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–∞ –∏ –≤–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
        logger.info('–í–≤–æ–¥ –ø—Ä–æ–º–ø—Ç–∞...');
        await page.mouse.click(200, 200);
        await page.keyboard.type(prompt);

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        logger.info('–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...');
        await page.mouse.click(200, 660);

        // –ñ–¥–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        logger.info('–û–∂–∏–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        logger.info('–û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
        await page.waitForTimeout(5000);

        let attempts = 0;
        const maxAttempts = 10;
        const downloadedFiles = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–µ–π —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        let outputPath = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—É—Ç–∏ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞

        while (attempts < maxAttempts && downloadedFiles.length < 4) { // –ñ–¥–µ–º, –ø–æ–∫–∞ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–ª–∏ –Ω–µ —Å–∫–∞—á–∞–µ—Ç—Å—è 4 —Ñ–∞–π–ª–∞
            attempts++;
            logger.info(`–ü–æ–ø—ã—Ç–∫–∞ #${attempts}: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∫–ª–∏–∫–∏
            // waitForGeneratedImage –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ 'img[class*="image-"]'
            const isImageLoaded = await waitForGeneratedImage(page);

            if (isImageLoaded) {
                logger.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–ø—ã—Ç–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö —á–µ—Ç—ã—Ä–µ—Ö...');

                // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
                const isImageStillLoaded = await page.evaluate((selector) => {
                    const img = document.querySelector(selector);
                    return img && img.complete && img.naturalWidth > 0 && img.naturalHeight > 0;
                }, 'img[class*="image-"]'); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–¥–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏

                if (!isImageStillLoaded) {
                    logger.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –≥–æ—Ç–æ–≤—ã –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é, –æ–∂–∏–¥–∞–µ–º...');
                    await page.waitForTimeout(5000);
                    continue;
                }

                // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
                logger.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã, –æ–∂–∏–¥–∞–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º...');
                await page.waitForTimeout(3000);

                // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
                const downloadDir = path.join(BASE_DOWNLOAD_PATH, profileId);
                logger.info(`–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${downloadDir}`);
                await fs.mkdir(downloadDir, { recursive: true });

                const downloadCoordinates = [
                    { x: 550, y: 450 }, // –ü–µ—Ä–≤–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
                    { x: 750, y: 450 }, // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                    { x: 952, y: 450 },
                    { x: 1154, y: 450 }
                ];

                for (let i = 0; i < downloadCoordinates.length; i++) {
                    const coords = downloadCoordinates[i];
                     // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª —É–∂–µ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–ø—ã—Ç–∫–µ —Ü–∏–∫–ª–∞ while (attempts < maxAttempts...)
                    // –≠—Ç–æ –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                    if (downloadedFiles.length > i) {
                         logger.info(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #${i+1} —É–∂–µ —Å–∫–∞—á–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª–∏–∫.`);
                         continue;
                    }


                    let retryClickCount = 0;
                    const maxClickRetries = 3; // –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

                    while(retryClickCount < maxClickRetries){
                         try {
                            logger.info(`–ö–ª–∏–∫–∞–µ–º –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i + 1} –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (${coords.x}, ${coords.y})... –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ ${retryClickCount + 1}/${maxClickRetries}`);

                            // –ù–∞–≤–æ–¥–∏–º –∫—É—Ä—Å–æ—Ä –ø–µ—Ä–µ–¥ –∫–ª–∏–∫–æ–º (—á–∞—Å—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Å hover-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏)
                            await page.mouse.move(coords.x, coords.y);
                            await page.waitForTimeout(1000); // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
                            await page.mouse.click(coords.x, coords.y);
                             logger.info(`–ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i+1}.`);

                            // –ñ–¥–µ–º —Å–æ–±—ã—Ç–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
                            logger.info(`–û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i + 1}...`);
                            const download = await page.waitForEvent('download', { timeout: 60000 }); // –£–≤–µ–ª–∏—á–∏–ª —Ç–∞–π–º–∞—É—Ç –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π

                            const originalFilename = download.suggestedFilename();
                            const fileExt = path.extname(originalFilename);
                            const namePart = (username ? String(username).replace(/[^a-zA-Z0-9_-]/g, '') : profileId);
                            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ —Å —É—á–µ—Ç–æ–º –µ–≥–æ –Ω–æ–º–µ—Ä–∞ –≤ –≥—Ä—É–ø–ø–µ
                            const newFilename = `${namePart}_${timestamp}_part${i + 1}${fileExt}`;
                            outputPath = path.join(downloadDir, newFilename);

                            logger.info(`–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #${i + 1} –ø–æ –ø—É—Ç–∏: ${outputPath}`);
                            await download.saveAs(outputPath);
                            logger.info(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #${i + 1} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ ${outputPath}`);
                            downloadedFiles.push(outputPath); // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Å–ø–∏—Å–∫—É —Å–∫–∞—á–∞–Ω–Ω—ã—Ö
                            
                             // –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Ç–æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –≤ Google Drive —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                            try {
                                const driveFileId = await uploadToDrive(outputPath, path.basename(outputPath));
                                logger.info(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ #${i+1} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Google Drive —Å ID: ${driveFileId}`);
                            } catch (driveError) {
                                logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i+1} –≤ Google Drive:`, driveError);
                                // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ Drive –Ω–µ —É–¥–∞–ª–∞—Å—å –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                            }

                             // –ï—Å–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–ø—ã—Ç–æ–∫ –∫–ª–∏–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
                             break;

                         } catch (error) {
                            retryClickCount++;
                            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –∏–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i+1} (–ø–æ–ø—ã—Ç–∫–∞ ${retryClickCount}/${maxClickRetries}): ${error.message}`);

                            if (retryClickCount < maxClickRetries) {
                                logger.info(`–û–∂–∏–¥–∞–Ω–∏–µ ${retryDelay/1000} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π –∫–ª–∏–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i+1}...`);
                                await page.waitForTimeout(retryDelay);
                            } else {
                                logger.error(`–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è #${i+1}`);
                                // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª, –º–æ–∂–Ω–æ –ª–∏–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ, –ª–∏–±–æ –≤—ã–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É
                                // –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–ø—ã—Ç–æ–∫ –∫–ª–∏–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –∏–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
                            }
                        }
                    }
                }

                // –ü–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–∫–∞—á–∞—Ç—å –≤—Å–µ 4, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ
                if (downloadedFiles.length === 4) {
                    logger.info('‚úÖ –í—Å–µ 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω—ã.');
                     break; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ attempts < maxAttempts
                } else {
                     logger.info(`–°–∫–∞—á–∞–Ω–æ ${downloadedFiles.length} –∏–∑ 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –æ–±—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/—Å–∫–∞—á–∏–≤–∞–Ω–∏—è...`);
                     await page.waitForTimeout(10000); // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –æ–±—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                }


            } else {
                logger.info('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é, –æ–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...');
                await page.waitForTimeout(10000);
            }
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        await page.waitForTimeout(5000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
        await page.close();

        if (downloadedFiles.length < 4) {
            logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤—Å–µ 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –°–∫–∞—á–∞–Ω–æ —Ç–æ–ª—å–∫–æ ${downloadedFiles.length}.`);
             // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            // –°–µ–π—á–∞—Å –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤—Å–µ 4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –°–∫–∞—á–∞–Ω–æ —Ç–æ–ª—å–∫–æ ${downloadedFiles.length}.`);
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π –≤—Å–µ—Ö —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        return downloadedFiles;

    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
        if (browser) {
            try {
                const pages = await browser.pages();
                for (let i = 0; i < pages.length; i++) {
                    await pages[i].screenshot({ path: `error-page-${i}.png` });
                }
            } catch (e) {
                logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤:', e);
            }
        }
        throw error;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
process.on('SIGINT', async () => {
    console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...');
    process.exit(0);
});if (require.main === module) {
    const profileId = process.argv[2];
    const prompt = process.argv[3];
    
    if (!profileId || !prompt) {
        console.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ID –ø—Ä–æ—Ñ–∏–ª—è –∏ –ø—Ä–æ–º–ø—Ç!');
        process.exit(1);
    }
    
    generateImage(profileId, prompt).catch(console.error);
}

module.exports = {
    generateImage
}; 
